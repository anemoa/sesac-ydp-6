.div1{
    background-color: aquamarine;
    width: 100px;
    height: 100px;
}

/* 
    :hover: 요소에 마우스를 올렸을 때
*/
.div1:hover{
    background-color: yellowgreen;
    width: 150px;
    height: 150px;
}

/* 
    :active: 요소를 마우스로 클릭하고 있을 때
*/
.div1:active{
    background-color: burlywood;
    width: 200px;
}

/* 
    :focus: 요소에 포커스가 되었을 때
*/
input:focus{
    background-color: blueviolet;
    color: white;
    /* outline-color: lime; */
}

.links > a:hover{
    background-color: coral;
}

.links > a:visited{
    color: aqua;
}



h1:hover{
    color: red;
}

h1 ~ a:active{
    background-color: blue;
}

a + input:focus{
    background-color: orange;
}

/* 요소 상황에 따른 가상 클래스 선택자 */

.zoo > *{
    background-color: green;
    color: #fff;
}

/* 
    1. E:firs-child : E(요소)가 첫번째 요소라면
*/

.zoo > :first-child{
    background-color: red;
}

/* 
    2. E:last-child : E(요소)가 마지막 요소라면
*/

.zoo > :last-child{
    background-color: black;
}

/* E:nth-child(n) : E(요소)가 n번째 요소라면 */

.zoo > :nth-child(2){
    background-color: aqua;
}

/* 
    E:not(XYZ): XYZ가 아닌 요소 선택
*/

.zoo > :not(div){
    background-color: pink;
}


/* 가상요소: before, after */

/* 
    - HTML 문서의 특정 부분을 스타일링 하기 위해 사용
    - 실제로 HTML 문서에 존재하지 않는 부분이지만 CSS를 통해 스타일 적용이 가능

    Q) 가상클래스 : ㅂ& 가상요소 :: 차이
    A) CSS사양이 발전하면서 가상클래스와 가상 요소를 명확하게 구분할 필요성이 생김
    가상클래스 - 문서의 기존 요소 상태를 나타냄
    가상 요소 - 문서의 특정 부분을 생성하여 스타일링함
    그렇기에 구분하기 위해서 ::로 표기하는 새로운 표기법을 도입
*/

.box::before{
    content: "택시";
}

.box::after{
    content: "빨리";
}